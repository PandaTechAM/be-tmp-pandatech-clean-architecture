version: '3.8'

volumes:
  # elasticsearch:
  #   driver: local
  # kibana:
  #   driver: local
  # pgadmin:
  #   driver: local
  rabbitmq:
    driver: local
  redis:
    driver: local
  redisinsight:
    driver: local
  postgres:
    driver: local


services:

  pandawebapi:
    build:
      context: .
      dockerfile: Dockerfile.Local
    container_name: dotnet_application
    hostname: webapi
    restart: always
    ports:
      - "80:80" # Change the ports as necessary for your application
    depends_on:
      - postgres_db
      - rabbitmq
      - redis
#      - elasticsearch
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - PANDAVAULT_URL=https://bevault.pandatech.it
      - PANDAVAULT_SECRET=0c579832-968e-463e-a69e-f9634332d29e
    volumes:
      -  ~/.aspnet/https:/https:ro
      
#####################################################################################

  # elasticsearch:
  #   container_name: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
  #   restart: always
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - bootstrap.memory_lock=true
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - xpack.security.http.ssl.enabled=false
  #     - xpack.security.transport.ssl.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1           
  #   volumes:
  #     - elasticsearch:/usr/share/elasticsearch/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

#################################################################################

  # kibana:
  #   depends_on:
  #    elasticsearch:
  #      condition: service_healthy
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:8.11.1
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   volumes:
  #     - kibana:/usr/share/kibana/data   

################################a###################################################

  # pg-admin:
  #   container_name: pg_admin
  #   image: dpage/pgadmin4:8.0
  #   restart: always
  #   ports:
  #     - "5050:80"
  #   #in pgAdmin set Host name/address to host.docker.internal
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=test@pandatech.it
  #     - PGADMIN_DEFAULT_PASSWORD=test
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin

###################################################################################

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12.9-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
    volumes:
      - rabbitmq:/var/lib/rabbitmq

###################################################################################

  redis:
    container_name: redis
    image: redis:7.2.3
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

 ###################################################################################

  redisinsight:
    container_name: redisinsight
    image: redislabs/redisinsight:1.14.0
    restart: always
    ports:
      - "8001:8001"
    volumes:
     - redisinsight:/db

###################################################################################

  postgres_db:
    container_name: postgres
    image: postgres:16.1
    restart: always
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5432:5432"  
    volumes:
      - postgres:/var/lib/postgresql/data  
    
    #Check optimal configurations with PandaPostgres
    command:
      - "-c"
      - "log_connections=on"
      - "-c"
      - "log_disconnections=on"
      - "-c"
      - "log_duration=on"
      - "-c"
      - "log_line_prefix=%m [%p-%l] %u@%d app=%a "
      - "-c"
      - "log_lock_waits=on"
      - "-c"
      - "log_min_duration_statement=1s"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_timezone=Asia/Yerevan"
      - "-c"
      - "log_temp_files=0"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "track_commit_timestamp=on"
      - "-c"
      - "track_functions=pl"
      - "-c"
      - "track_io_timing=on"
      - "-c"
      - "hot_standby_feedback=on"
      - "-c"
      - "TimeZone=Asia/Yerevan"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "cpu_tuple_cost=0.03"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "max_connections=24"
      - "-c"
      - "idle_in_transaction_session_timeout=5min"
      - "-c"
      - "max_locks_per_transaction=128"
      - "-c"
      - "synchronous_commit=off"
      - "-c"
      - "default_transaction_read_only=off"
      - "-c"
      - "transaction_read_only=off"
      - "-c"
      - "archive_mode=on"
      - "-c"
      - "checkpoint_timeout=15min"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "max_wal_senders=64"
      - "-c"
      - "wal_buffers=-1"
      - "-c"
      - "wal_compression=on" 
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "wal_log_hints=on"